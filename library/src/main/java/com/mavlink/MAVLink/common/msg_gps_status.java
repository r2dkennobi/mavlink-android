/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE GPS_STATUS PACKING
package com.mavlink.MAVLink.common;

/**
* The positioning status, as reported by GPS. This message is intended to display status information about each satellite visible to the receiver. See message GLOBAL_POSITION for the global position estimate. This message can contain information for up to 20 satellites.
*/
public class msg_gps_status extends com.mavlink.MAVLink.Messages.MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_GPS_STATUS = 25;
    public static final int MAVLINK_MSG_LENGTH = 101;
    private static final long serialVersionUID = MAVLINK_MSG_ID_GPS_STATUS;


      
    /**
    * Number of satellites visible
    */
    public short satellites_visible;
      
    /**
    * Global satellite ID
    */
    public short satellite_prn[] = new short[20];
      
    /**
    * 0: Satellite not used, 1: used for localization
    */
    public short satellite_used[] = new short[20];
      
    /**
    * Elevation (0: right on top of receiver, 90: on the horizon) of satellite
    */
    public short satellite_elevation[] = new short[20];
      
    /**
    * Direction of satellite, 0: 0 deg, 255: 360 deg.
    */
    public short satellite_azimuth[] = new short[20];
      
    /**
    * Signal to noise ratio of satellite
    */
    public short satellite_snr[] = new short[20];
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public com.mavlink.MAVLinkPacket pack(){
        com.mavlink.MAVLinkPacket packet = new com.mavlink.MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_GPS_STATUS;
              
        packet.payload.putUnsignedByte(satellites_visible);


        for (short aSatellite_prn : satellite_prn) {
            packet.payload.putUnsignedByte(aSatellite_prn);
        }


        for (short aSatellite_used : satellite_used) {
            packet.payload.putUnsignedByte(aSatellite_used);
        }


        for (short aSatellite_elevation : satellite_elevation) {
            packet.payload.putUnsignedByte(aSatellite_elevation);
        }


        for (short aSatellite_azimuth : satellite_azimuth) {
            packet.payload.putUnsignedByte(aSatellite_azimuth);
        }


        for (short aSatellite_snr : satellite_snr) {
            packet.payload.putUnsignedByte(aSatellite_snr);
        }
                    
        
        return packet;
    }

    /**
    * Decode a gps_status message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(com.mavlink.MAVLink.Messages.MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.satellites_visible = payload.getUnsignedByte();
              
         
        for (int i = 0; i < this.satellite_prn.length; i++) {
            this.satellite_prn[i] = payload.getUnsignedByte();
        }
                
              
         
        for (int i = 0; i < this.satellite_used.length; i++) {
            this.satellite_used[i] = payload.getUnsignedByte();
        }
                
              
         
        for (int i = 0; i < this.satellite_elevation.length; i++) {
            this.satellite_elevation[i] = payload.getUnsignedByte();
        }
                
              
         
        for (int i = 0; i < this.satellite_azimuth.length; i++) {
            this.satellite_azimuth[i] = payload.getUnsignedByte();
        }
                
              
         
        for (int i = 0; i < this.satellite_snr.length; i++) {
            this.satellite_snr[i] = payload.getUnsignedByte();
        }
                
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_gps_status(){
        msgid = MAVLINK_MSG_ID_GPS_STATUS;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_gps_status(com.mavlink.MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_GPS_STATUS;
        unpack(mavLinkPacket.payload);        
    }

                
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_GPS_STATUS -"+" satellites_visible:"+satellites_visible+" satellite_prn:"+satellite_prn+" satellite_used:"+satellite_used+" satellite_elevation:"+satellite_elevation+" satellite_azimuth:"+satellite_azimuth+" satellite_snr:"+satellite_snr+"";
    }
}
        